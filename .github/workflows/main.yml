name: Remove BG to MP4 (black, no-audio, full, pinned u2net_human_seg)

on:
  workflow_dispatch:
    inputs:
      VIDEO_URL:
        description: "URL video (tùy chọn). Bỏ trống để dùng file trong repo."
        required: false
        default: ""
      INPUT_PATH:
        description: "Đường dẫn file trong repo (khi không dùng VIDEO_URL)"
        required: false
        default: "INPUT/input.mp4"
      FPS:
        description: "FPS xử lý (24/25/30)"
        required: false
        default: "30"
      ERODE_PASSES:
        description: "Co viền alpha (deflate passes), đề xuất 2–3"
        required: false
        default: "2"
      FEATHER:
        description: "Làm mượt viền alpha (px). 0 = tắt"
        required: false
        default: "1"

jobs:
  remove_bg:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare folders
        run: |
          mkdir -p INPUT OUT .work

      - name: Install FFmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install Torch + BackgroundRemover (+ yt-dlp if URL)
        run: |
          python -m pip install --upgrade pip
          python -m pip install --index-url https://download.pytorch.org/whl/cpu torch torchvision torchaudio
          python -m pip install backgroundremover==0.3.4 yt-dlp

      - name: Cache Torch & Models
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/torch
            ~/.cache/backgroundremover
            ~/.u2net
          key: bgrem-${{ runner.os }}-${{ hashFiles('.github/workflows/*.yml') }}

      - name: Resolve input video
        id: resolve
        shell: bash
        run: |
          set -euo pipefail
          if [ -n "${{ inputs.VIDEO_URL }}" ]; then
            echo "[INFO] Downloading: ${{ inputs.VIDEO_URL }}"
            yt-dlp -o INPUT/input.mp4 "${{ inputs.VIDEO_URL }}"
            SRC="INPUT/input.mp4"
          else
            SRC="${{ inputs.INPUT_PATH }}"
            if [ ! -f "$SRC" ]; then
              echo "::error::Không tìm thấy file: $SRC"
              exit 1
            fi
          fi
          echo "src=$SRC" >> "$GITHUB_OUTPUT"

      - name: Remove background to temp RGBA (pinned model u2net_human_seg)
        shell: bash
        run: |
          set -euo pipefail
          SRC="${{ steps.resolve.outputs.src }}"
          FPS="${{ inputs.FPS }}"
          backgroundremover -i "$SRC" -fr "$FPS" -m u2net_human_seg -tv -o .work/cutout_tmp.mov

      - name: Flatten to MP4 (black bg, no audio) with anti-halo
        shell: bash
        run: |
          set -euo pipefail
          P=${{ inputs.ERODE_PASSES }}
          FEATHER=${{ inputs.FEATHER }}

          # Build deflate chain P times (co viền alpha)
          DFLT=""
          if [ "$P" -gt 0 ]; then
            for _ in $(seq 1 "$P"); do DFLT="${DFLT}deflate,"; done
            DFLT="${DFLT%,}"
          fi

          # Feather alpha via boxblur on alpha plane only
          if [ "$FEATHER" -eq 0 ]; then
            BLUR_ALPHA="boxblur=0:1"
          else
            BLUR_ALPHA="boxblur=0:1:cr=0:ar=${FEATHER}:ap=1"
          fi

          # Compose filter graph
          FG="[1:v]format=rgba,split=2[vid][a];[a]alphaextract,${BLUR_ALPHA}"
          if [ -n "$DFLT" ]; then
            FG="${FG},${DFLT}"
          fi
          FG="${FG}[am];[vid][am]alphamerge[fg];[0:v][fg]scale2ref[bg][fg2];[bg][fg2]overlay=shortest=1"

          echo "[INFO] filter_complex: $FG"

          # Background black (auto scale to FG via scale2ref), no audio (-an)
          ffmpeg -y -hide_banner -loglevel error \
            -f lavfi -i color=c=black:s=16x16:d=999999 \
            -i .work/cutout_tmp.mov \
            -filter_complex "$FG" \
            -an -c:v libx264 -pix_fmt yuv420p OUT/out.mp4

      - name: Cleanup temp
        shell: bash
        run: |
          rm -f .work/cutout_tmp.mov
          echo "[OK] OUT/out.mp4 ready (black bg, no audio)."

      - name: List outputs
        run: |
          ls -lh OUT/

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: out-black-noaudio
          path: OUT/out.mp4
